name: Build Application For All Platforms

on:
  push:
    branches: [ master ]
    tags:
      - 'v*'

  pull_request:
    branches: [ master ]
    tags:
      - 'v*'

jobs:

  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    if: contains(github.ref, 'tags/v')
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}

    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false


  Android-And-Linux:
    needs: create_release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'
      - uses: subosito/flutter-action@v1
        with:
          channel: 'beta'
      - name: Install Linux Build Tools
        run: sudo apt install ninja-build g++ clang cmake libgtk-3-dev libglu1-mesa pkg-config

      - name: Enable Linux Build For Flutter
        run: flutter config --enable-linux-desktop
      - name: Get Dependancies
        run: flutter pub get

      - name: output signing key
        run: echo $SIGNING_KEY | base64 -d > android/app/key.jks
        env:
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
      - name: Build Android
        run: flutter build apk --split-per-abi
        env:
          KEY_STORE_PASSWORD: ${{ secrets.KEY_STORE_PASSWORD }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
          ALIAS: ${{ secrets.ALIAS }}
          KEY_PATH: key.jks

      - name: Upload Android arm64-v8a Build
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_name: android-v8a.apk
          asset_path: ./build/app/outputs/flutter-apk/app-arm64-v8a-release.apk
          asset_content_type: application/vnd.android.package-archive

      - name: Upload Android armeabi-v7a Build
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_name: android-v7a.apk
          asset_path: ./build/app/outputs/flutter-apk/app-armeabi-v7a-release.apk
          asset_content_type: application/vnd.android.package-archive

      - name: Upload Android x86_64 Build
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_name: android-x86_64.apk
          asset_path: ./build/app/outputs/flutter-apk/app-x86_64-release.apk
          asset_content_type: application/vnd.android.package-archive


      - name: Build Linux
        run: flutter build linux

      - name: Build Linux Release Zip
        run: zip -r linux-x64.zip build/linux/x64/release/bundle

      - name: Upload Linux Build
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_name: linux-x64.zip
          asset_path: ./linux-x64.zip
          asset_content_type: application/zip

  IOS-and-MacOS:
    needs: create_release
    runs-on: macos-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v2
      - name: FINISH IOS BUILD
        run: |
          touch ios.txt
          echo "Please Build IOS app with your own apple ID" >> ios.txt
      - name: Upload IOS Build
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_name: IOS.txt
          asset_path: ./ios.txt
          asset_content_type: text/plain

      - name: FINISH MacOS BUILD
        run: |
          touch macos.txt
          echo "Please Build MacOS app with your own apple ID" >> macos.txt
      - name: Upload MacOS Build
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_name: MacOS.txt
          asset_path: ./macos.txt
          asset_content_type: text/plain



  Windows:
    needs: create_release
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'
      - uses: subosito/flutter-action@v1
        with:
          channel: 'beta'


      - name: Build Windows Build
        run: flutter config --enable-windows-desktop
      - name: Get Dependancies
        run: flutter pub get
      - name: Build Windows
        run: flutter build windows

      - name: Build Windows Release Zip
        run: Compress-Archive .\build\windows\runner\Release\* windows-x64.zip

      - name: Upload Build
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_name: Windows-x64.zip
          asset_path: ./windows-x64.zip
          asset_content_type: application/zip